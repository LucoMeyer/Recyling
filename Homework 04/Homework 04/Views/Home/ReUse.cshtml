
@{
    ViewBag.Title = "ReUse";
}

<div class="jumbotron">
<h1>Re-Use</h1>
<p class="lead">
    Learning to re-use items, rather than discard them makes a world of difference, by reducing the amount of trash that ends up in our oceans and landfills, as well as alleviating pressure from our recycling plants!
    <br />
    <br />
</p>

</div>


<div class="row">
    <div class="col-md-6">
        To discover thrift stores and second-hand markets in your area, feel free to use the attached Google map.
    </div>

    <div class="col-md-6">


        <input id="input" style="height:30px; width:400px;">
        <div id="map" style="height:400px; width:400px;"></div>
        <script>

         

            function initMap() {
                var location = {
                    lat: 40.000,
                    lng: -79.000
                }
                var options = {
                    center: location,
                    zoom: 9
                }

                if (navigator.geolocation) {
                    console.log('geolocation is here!');

                    navigator.geolocation.getCurrentPosition((loc) => {

                        location.lat = loc.coords.latitude;
                        location.lng = loc.coords.longitude;

                        map = new google.maps.Map(document.getElementById("map"), options);
                    },
                        (err) => {
                            console.log("User clicked no location");
                            map = new google.maps.Map(document.getElementById("map"), options);
                        }
                    )
                } else {
                    console.log('geolocation not supported');
                    map = new google.maps.Map(document.getElementById("map"), options);
                }

                autocomplete = new google.maps.places.Autocomplete(document.getElementById("input"),
                    {
                        componentRestrictions: { 'country': ['ZA'] },
                        fields: ['geometry', 'name'],
                        types: ['establishment']


                    })

                autocomplete.addListener("place_changed", () => {

                    const place = autocomplete.getPlace();
                    new google.maps.Marker({
                        position: place.geometry.location,
                        title: place.name,
                        map: map
                    })
                })

            }

        </script>


       

        <script async
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAbX9jhEdNem1aG4Nk8m-7hbC-ZOeExGf0&libraries=places&callback=initMap">
        </script>


    </div>


</div>

<style>
    body {
        color: #404e67;
        background: #f5f7fa;
        font-family: "Open Sans", sans-serif;
    }
</style>
